jobs:
  ##########################
  # begin DOCS JOBS
  ##########################
#  - name: publish_prod_docs
#    type: runSh
#    steps:
#      - IN: config_repo
#        switch: off
#      - IN: docs_repo
#        switch: off
#      - IN: aws_v2_prod_cli
#      - TASK:
#        - script: ./IN/config_repo/gitRepo/deployDocs.sh s3://docs.shippable.com us-west-2 docs_repo production
#
#  - name: publish_rc_docs
#    type: runSh
#    steps:
#      - IN: config_repo
#        switch: off
#      - IN: docs_repo
#      - IN: aws_v2_rc_cli
#      - TASK:
#        - script: ./IN/config_repo/gitRepo/deployDocs.sh s3://rcdocs.shippable.com us-east-1 docs_repo rc

  ##########################
  # end DOCS JOBS
  ##########################

  ##########################
  # begin check_queue job
  ##########################
  - name: check_prod_queue
    type: runSh
    steps:
      - IN: check_queue_trigger
      - IN: config_repo
        switch: off
      - IN: prod_api_params
      - TASK:
        - script: ./IN/config_repo/gitRepo/checkQueue.sh prod
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('
      - NOTIFY: slack_prod

  ##########################
  # end check_queue job
  ##########################

  ##########################
  # begin LOCK UNLOCK JOBS
  ##########################

  - name: lock_team
    type: runSh
    steps:
      - IN: wh_api_repo
      - IN: wh_www_repo
      - IN: wh_micro_repo
      - IN: wh_nexec_repo
      - IN: wh_cexec_repo
      - IN: wh_mktg_repo
      - IN: team_params
      - IN: config_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/lockUnlockTeams.sh pull
      - OUT: api_repo
        replicate: wh_api_repo
      - OUT: www_repo
        replicate: wh_www_repo
      - OUT: micro_repo
        replicate: wh_micro_repo
      - OUT: nexec_repo
        replicate: wh_nexec_repo
      - OUT: cexec_repo
        replicate: wh_cexec_repo
      - OUT: mktg_repo
        replicate: wh_mktg_repo
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: unlock_team
    type: runSh
    steps:
#      - IN: bvt-v2
      - IN: deploy_rc #temp instead of bvt-v2
      - IN: team_params
      - IN: config_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/lockUnlockTeams.sh push
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ##########################
  # end LOCK UNLOCK JOBS
  ##########################

  - name: build_ship_dd_svcs
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: postgres_repo
      - IN: vault_repo
      - IN: gitlab_repo
      - IN: rabbitmq_repo
      - IN: redis_repo
      - IN: ship_dh_cli_v2
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/genBuildImage.sh drydock
      - OUT: postgres_img
      - OUT: vault_img
      - OUT: gitlab_img
      - OUT: rabbitmq_img
      - OUT: redis_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_ship_ecr_svcs
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: microbase_img
        switch: off
      - IN: mktg_repo
      - IN: nexec_repo
      - IN: api_repo
      - IN: www_repo
      - IN: shipbits_ecr_v2_cli
        switch: off
        scopes:
          - ecr
      - TASK:
        - script: ./IN/config_repo/gitRepo/genBuildImage.sh 374168611083.dkr.ecr.us-east-1.amazonaws.com
      - OUT: mktg_img
      - OUT: nexec_img
      - OUT: api_img
      - OUT: www_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_microbase
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: microbase_repo
      - IN: u14_img
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh microbase drydock
      - OUT: microbase_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: patch_mktg
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: mktg_img
        switch: off
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/patchImage.sh mktg 374168611083.dkr.ecr.us-east-1.amazonaws.com rel_prod

  - name: build_admiral
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: admiral_repo
      - IN: microbase_img
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh admiral drydock
      - OUT: admiral_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_micro
    type: runSh
    steps:
      - IN: micro_repo
      - IN: execTemplates_repo
      - IN: microbase_img
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/micro_repo/gitRepo/build.sh
      - OUT: micro_img
      - OUT: genexec_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_reqProc_x86_64_Ubuntu_16_04
    type: runSh
    steps:
      - IN: reqProc_repo
      - IN: package_reqExec_x86_64_Ubuntu_16_04
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_x86_64_WindowsServer_2016
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: microbase_img
      - TASK:
        - script: ./IN/reqProc_repo/gitRepo/build.sh x86_64 Ubuntu_16.04 drydock reqproc

  - name: build_reqProc_x86_64_macOS_10_12
    type: runSh
    runtime:
      architecture: x86_64
      os: macOS_10.12
      container: false
    steps:
      - IN: reqProc_repo
      - IN: package_reqExec_x86_64_Ubuntu_16_04
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_x86_64_WindowsServer_2016
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: microbase_img
      - TASK:
        - script: ./IN/reqProc_repo/gitRepo/build.sh x86_64 macOS_10.12 drydock m10reqproc

  - name: build_reqProc_x86_64_WindowsServer_2016
    type: runSh
    runtime:
      architecture: x86_64
      os: WindowsServer_2016
      container: false
    steps:
      - IN: reqProc_repo
      - IN: package_reqExec_x86_64_Ubuntu_16_04
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_x86_64_WindowsServer_2016
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: microbase_img
      - TASK:
        - script: echo "This should run ./IN/reqProc_repo/gitRepo/build.sh x86_64 WindowsServer_2016 drydock w16reqproc"

  - name: build_reqProc_aarch64_Ubuntu_16_04
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: reqProc_repo
      - IN: package_reqExec_x86_64_Ubuntu_16_04
        switch: off
      - IN: package_reqExec_x86_64_macOS_10_12
        switch: off
      - IN: package_reqExec_x86_64_WindowsServer_2016
        switch: off
      - IN: package_reqExec_aarch64_Ubuntu_16_04
        switch: off
      - IN: execTemplates_repo
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
      - IN: ship_dh_cli_v2
      - IN: microbase_img
      - TASK:
        - script: ./IN/reqProc_repo/gitRepo/build.sh aarch64 Ubuntu_16.04 drydockaarch64 reqproc

  - name: package_reqExec_x86_64_Ubuntu_16_04
    type: runSh
    steps:
      - IN: microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh x86_64 Ubuntu_16.04 s3://shippable-artifacts

  - name: package_reqExec_x86_64_macOS_10_12
    type: runSh
    runtime:
      architecture: x86_64
      os: macOS_10.12
      container: false
    steps:
      - IN: microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh x86_64 macOS_10.12 s3://shippable-artifacts

  - name: package_reqExec_x86_64_WindowsServer_2016
    type: runSh
    runtime:
      architecture: x86_64
      os: WindowsServer_2016
      container: false
    steps:
      - IN: microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: echo "This should run ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh x86_64 WindowsServer_2016 s3://shippable-artifacts"

  - name: package_reqExec_aarch64_Ubuntu_16_04
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: microbase_img
      - IN: config_repo
        switch: off
      - IN: reqExec_repo
      - IN: aws_v2_bits_access_cli
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildAndPushReqExecArtifacts.sh aarch64 Ubuntu_16.04 s3://shippable-artifacts

  #  ###########################################
  #  # deploy rc release to rc environment
  #  ###########################################
  - name: deploy_rc
    type: runSh
    on_start:
      - NOTIFY: slack_rc
    steps:
      - IN: config_repo
        switch: off
      - IN: patch_baseami
        switch: off
      - IN: aws_rc_pem
      - IN: aws_rc_swarm
      - IN: api_img
      - IN: www_img
      - IN: nexec_img
      - IN: genexec_img
      - IN: mktg_img
      - IN: micro_img
        switch: off
      - IN: admiral_img
      - TASK:
        - script: ./IN/config_repo/gitRepo/deployRc.sh
    on_success:
      - script: echo 'succeeded'
      - NOTIFY: slack_rc
    on_failure:
      - script: echo 'failed'
      - NOTIFY: slack_rc

  ###########################################
  # create admiral AMI after deployment
  ###########################################

  - name: build_admiral_ami
    type: runSh
    steps:
      - IN: deploy_rc
        switch: off
      - IN: config_repo
        switch: off
      - IN: bldami_repo
        switch: off
      - IN: aws_v2_bits_access
      - IN: aws_v2_prod_access
      - IN: admiralami_params
      - TASK:
        - script: IN/bldami_repo/gitRepo/admiral/admiralPack.sh build_admiral_ami admiralami_params
    on_success:
      - script: echo 'succeeded'
      - NOTIFY: slack_rc
    on_failure:
      - script: echo 'failed'
      - NOTIFY: slack_rc

  ###########################################
  # release production from default manifest
  ###########################################

  - name: rel_prod
    type: release
    steps:
      - IN: ship_ver
        switch: off
#      - IN: bvt-v2
#        switch: off
      - IN: unlock_team  #temp instead of bvt-v2
        switch: off
      - TASK: managed
        bump: patch

  ###########################################
  # BEGIN run infra provisioning
  ###########################################

  - name: rc_saas_infra_prov
    type: runSh
    steps:
      - IN: aws_rc_pem
      - IN: aws_v2_rc_access
      - IN: infra_repo
        switch: off
      - TASK:
        - script: IN/infra_repo/gitRepo/provision.sh rc saas
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/infra_repo/gitRepo/archiveProvisionState.sh rc saas

  - name: prod_saas_infra_prov
    type: runSh
    steps:
      - IN: aws_prod_pem
      - IN: aws_v2_prod_access
      - IN: infra_repo
        switch: off
      - TASK:
        - script: IN/infra_repo/gitRepo/provision.sh prod saas
    on_success:
      - script: echo 'SUCCESS!'
    on_failure:
      - script: echo 'FAILURE!'
    always:
      - script: /build/IN/infra_repo/gitRepo/archiveProvisionState.sh prod saas

  ###########################################
  # BEGIN run infra provisioning
  ###########################################

  ###########################################
  # BEGIN Build Acceptance Tests
  ###########################################
  - name: bvt-v2
    type: runSh
    steps:
      - IN: bvt_v2_repo
      - IN: bvt_v2_params
      - IN: bvt_v2_ghc_owner_ssh_key
      - IN: bvt_v2_ghc_collab_ssh_key
#      - IN: deploy_rc
      - TASK:
        - script: IN/bvt_v2_repo/gitRepo/test.sh bvt_v2_params
    on_success:
      - NOTIFY: slack_rc
    on_failure:
      - NOTIFY: slack_rc
  ###########################################
  # END Build Acceptance Tests
  ###########################################

  ###########################################
  # START Build AMI
  ###########################################
  - name: build_baseami
    type: runSh
    steps:
      - IN: u16cppall_img
        switch: off
      - IN: u16phpall_img
        switch: off
      - IN: u16ruball_img
        switch: off
      - IN: u16scaall_img
        switch: off
      - IN: u16javall_img
        switch: off
      - IN: u16golall_img
        switch: off
      - IN: u16cloall_img
        switch: off
      - IN: u16pytall_img
        switch: off
      - IN: u16nodall_img
        switch: off
      - IN: u16all_img
        switch: off
      - IN: u16_img
        switch: off
      - IN: u14_img
        switch: off
      - IN: u14all_img
        switch: off
      - IN: u14nodall_img
        switch: off
      - IN: u14pytall_img
        switch: off
      - IN: u14cloall_img
        switch: off
      - IN: u14golall_img
        switch: off
      - IN: u14javall_img
        switch: off
      - IN: u14scaall_img
        switch: off
      - IN: u14ruball_img
        switch: off
      - IN: u14phpall_img
        switch: off
      - IN: u14cppall_img
        switch: off
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: node_repo
        switch: off
      - IN: bldami_repo
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/base/basePack.sh build_baseami baseami_params
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat IN/bldami_repo/gitRepo/base/output.txt

  - name: patch_baseami
    type: runSh
    steps:
      - IN: cexec_repo
      - IN: node_repo
        switch: off
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: build_baseami
        switch: off
      - IN: bldami_repo
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/basePatch/basePatchPack.sh
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat IN/bldami_repo/gitRepo/basePatch/output.txt

  ###########################################
  # END Build AMI
  ###########################################

  ###########################################
  # START Drydock image builds
  ###########################################

  - name: build_u14
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14 drydock
      - OUT: u14_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14all
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14_img
      - IN: u14all_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14all drydock
      - OUT: u14all_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14nodall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14nodall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14nodall drydock
      - OUT: u14nodall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14pytall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14pytall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14pytall drydock
      - OUT: u14pytall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14cloall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14cloall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14cloall drydock
      - OUT: u14cloall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14golall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14golall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14golall drydock
      - OUT: u14golall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14javall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14javall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14javall drydock
      - OUT: u14javall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14scaall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14javall_img
      - IN: u14scaall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14scaall drydock
      - OUT: u14scaall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14ruball
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14ruball_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14ruball drydock
      - OUT: u14ruball_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14phpall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14phpall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14phpall drydock
      - OUT: u14phpall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u14cppall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u14all_img
      - IN: u14cppall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u14cppall drydock
      - OUT: u14cppall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16 drydock
      - OUT: u16_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16all
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16_img
      - IN: u16all_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16all drydock
      - OUT: u16all_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16nodall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16nodall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16nodall drydock
      - OUT: u16nodall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16pytall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16pytall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16pytall drydock
      - OUT: u16pytall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16cloall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16cloall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16cloall drydock
      - OUT: u16cloall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16golall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16golall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16golall drydock
      - OUT: u16golall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16javall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16javall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16javall drydock
      - OUT: u16javall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16scaall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16javall_img
      - IN: u16scaall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16scaall drydock
      - OUT: u16scaall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16ruball
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16ruball_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16ruball drydock
      - OUT: u16ruball_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16phpall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16phpall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16phpall drydock
      - OUT: u16phpall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_u16cppall
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: u16all_img
      - IN: u16cppall_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16cppall drydock
      - OUT: u16cppall_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ###########################################
  # END Drydock image builds
  ###########################################
  ###########################################
  # START Drydockaarch64 image builds
  ###########################################

  - name: build_aarch64_u16
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: config_repo
        switch: off
      - IN: aarch64_u16_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16 drydockaarch64
      - OUT: u16_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: build_aarch64_u16pyt
    type: runSh
    runtime:
      architecture: aarch64
      os: Ubuntu_16.04
      container: false
    steps:
      - IN: config_repo
        switch: off
      - IN: aarch64_u16_img
      - IN: aarch64_u16pyt_repo
      - IN: ship_dh_cli_v2
      - TASK:
        - script: ./IN/config_repo/gitRepo/buildImage.sh u16pyt drydockaarch64
      - OUT: aarch64_u16pyt_img
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ###########################################
  # START Drydockaarch64 image builds
  ###########################################
  ###########################################
  # START TAG & PUSH image/repos/amis
  ###########################################

  - name: tag_push_img_genexec
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: genexec_img
        switch: off
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: rel_prod
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushImage.sh genexec 374168611083.dkr.ecr.us-east-1.amazonaws.com
        - script: ./IN/config_repo/gitRepo/tagAndPushImage.sh genexec drydock
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  - name: tag_reqProc
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: rel_prod
      - TASK:
          script:
            - ./IN/config_repo/gitRepo/tagAndPushImage.sh reqproc drydock
            - ./IN/config_repo/gitRepo/tagAndPushImage.sh m10reqproc drydock
            - echo "This should run ./IN/config_repo/gitRepo/tagAndPushImage.sh w16reqproc drydock"
            - ./IN/config_repo/gitRepo/tagAndPushImage.sh reqproc drydockaarch64

  - name: tag_reqExec
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: rel_prod
      - IN: aws_v2_bits_access_cli
      - TASK:
          script:
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 Ubuntu_16.04 s3://shippable-artifacts
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 macOS_10.12 s3://shippable-artifacts
            - echo "This should run ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh x86_64 WindowsServer_2016 s3://shippable-artifacts"
            - ./IN/config_repo/gitRepo/tagReqExecArtifacts.sh aarch64 Ubuntu_16.04 s3://shippable-artifacts

  - name: tag_push_admiral
    type: runSh
    steps:
      - IN: config_repo
        switch: off
      - IN: admiral_repo
        switch: off
      - IN: admiral_img
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: rel_prod
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushAdmiralImageRepo.sh drydock Shippable
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ### Tagging drydock Shippable services
  - name: tag_push_dry
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: microbase_img
        switch: off
      - IN: microbase_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh dry
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ### Tagging ecr hosted services
  - name: tag_push_ecr
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: shipbits_ecr_v2_cli
        scopes:
          - ecr
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: mktg_img
        switch: off
      - IN: mktg_repo
        switch: off
      - IN: micro_img
        switch: off
      - IN: micro_repo
        switch: off
      - IN: nexec_img
        switch: off
      - IN: nexec_repo
        switch: off
      - IN: api_img
        switch: off
      - IN: api_repo
        switch: off
      - IN: www_img
        switch: off
      - IN: www_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh ecr
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ### Tagging repo services
  - name: tag_push_repo
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: execTemplates_repo
        switch: off
      - IN: node_repo
        switch: off
      - IN: cexec_repo
        switch: off
      - IN: reqExec_repo
        switch: off
      - IN: reqProc_repo
        switch: off
      - IN: reqKick_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh repo
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ### Tagging core services
  - name: tag_push_core
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: gitlab_img
        switch: off
      - IN: gitlab_repo
        switch: off
      - IN: postgres_img
        switch: off
      - IN: postgres_repo
        switch: off
      - IN: rabbitmq_img
        switch: off
      - IN: rabbitmq_repo
        switch: off
      - IN: redis_img
        switch: off
      - IN: redis_repo
        switch: off
      - IN: vault_img
        switch: off
      - IN: vault_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh core
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ### Tagging u14 services
  - name: tag_push_u14
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: u14_img
        switch: off
      - IN: u14_repo
        switch: off
      - IN: u14all_img
        switch: off
      - IN: u14all_repo
        switch: off
      - IN: u14nodall_img
        switch: off
      - IN: u14nodall_repo
        switch: off
      - IN: u14pytall_img
        switch: off
      - IN: u14pytall_repo
        switch: off
      - IN: u14cloall_img
        switch: off
      - IN: u14cloall_repo
        switch: off
      - IN: u14golall_img
        switch: off
      - IN: u14golall_repo
        switch: off
      - IN: u14javall_img
        switch: off
      - IN: u14javall_repo
        switch: off
      - IN: u14scaall_img
        switch: off
      - IN: u14scaall_repo
        switch: off
      - IN: u14ruball_img
        switch: off
      - IN: u14ruball_repo
        switch: off
      - IN: u14phpall_img
        switch: off
      - IN: u14phpall_repo
        switch: off
      - IN: u14cppall_img
        switch: off
      - IN: u14cppall_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh u14
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ### Tagging u16 services
  - name: tag_push_u16
    type: runSh
    steps:
      - IN: rel_prod
      - IN: config_repo
        switch: off
      - IN: ship_dh_cli_v2
        switch: off
      - IN: avi_gh_ssh
        switch: off
      - IN: u16_img
        switch: off
      - IN: u16_repo
        switch: off
      - IN: u16all_img
        switch: off
      - IN: u16all_repo
        switch: off
      - IN: u16nodall_img
        switch: off
      - IN: u16nodall_repo
        switch: off
      - IN: u16pytall_img
        switch: off
      - IN: u16pytall_repo
        switch: off
      - IN: u16cloall_img
        switch: off
      - IN: u16cloall_repo
        switch: off
      - IN: u16golall_img
        switch: off
      - IN: u16golall_repo
        switch: off
      - IN: u16javall_img
        switch: off
      - IN: u16javall_repo
        switch: off
      - IN: u16scaall_img
        switch: off
      - IN: u16scaall_repo
        switch: off
      - IN: u16ruball_img
        switch: off
      - IN: u16ruball_repo
        switch: off
      - IN: u16phpall_img
        switch: off
      - IN: u16phpall_repo
        switch: off
      - IN: u16cppall_img
        switch: off
      - IN: u16cppall_repo
        switch: off
      - TASK:
        - script: ./IN/config_repo/gitRepo/tagAndPushSvcs.sh u16
    on_success:
      - script: echo 'on success !!!!!'
    on_failure:
      - script: echo 'Failed job .... :('

  ###########################################
  # END TAG & PUSH image/repos/amis
  ###########################################




  ##########################
  # start build release amis
  ##########################

  - name: build_finalami
    type: runSh
    steps:
      - IN: tag_push_u16
        switch: off
      - IN: tag_push_u14
        switch: off
      - IN: tag_push_ecr
        switch: off
      - IN: tag_push_img_genexec
        switch: off
      - IN: tag_push_repo
        switch: off
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: bldami_repo
        switch: off
      - IN: patch_baseami
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPack.sh
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_final_admiral_ami
    type: runSh
    dependencyMode: strict
    steps:
      - IN: rel_prod
        switch: off
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: tag_push_ecr
      - IN: config_repo
        switch: off
      - IN: bldami_repo
        switch: off
      - IN: build_admiral_ami
        switch: off
      - IN: aws_v2_prod_access
      - IN: aws_v2_bits_access
      - IN: admiralami_params
      - TASK:
        - script: IN/bldami_repo/gitRepo/admiralPatch/admiralPatchPack.sh build_final_admiral_ami admiralami_params rel_prod
    on_success:
      - script: echo 'SUCCESS'
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/admiralPatch/output.txt

  - name: build_v532
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v532 rel_prod ami-3b972d2d v532 Ubuntu_14.04_Docker_1.13.sh true
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_v541
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v541 rel_prod ami-90813b86 v541 Ubuntu_14.04_Docker_1.13.sh true
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_v551
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v551 rel_prod ami-4b36535d v551 Ubuntu_14.04_Docker_1.13.sh true
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_v561
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v561 rel_prod ami-c0a5f5d6 v561 Ubuntu_14.04_Docker_1.13.sh true
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_v573
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v573 rel_prod ami-b9cfdeaf v573 Ubuntu_14.04_Docker_1.13.sh true
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_v582
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v582 rel_prod ami-f9d6e782 v582 Ubuntu_14.04_Docker_17.06.sh true
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_v5104
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_v5104 rel_prod ami-312b8d4b v5104 Ubuntu_14.04_Docker_17.06.sh true
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_stable
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_stable rel_prod ami-4ae41a5c stable Ubuntu_14.04_Docker_1.9.sh false
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  - name: build_unstable
    type: runSh
    dependencyMode: strict
    steps:
      - IN: baseami_params
      - IN: aws_v2_bits_access
      - IN: tag_push_img_genexec
      - IN: tag_push_repo
      - IN: bldami_repo
        switch: off
      - IN: rel_prod
        switch: off
      - TASK:
        - script: IN/bldami_repo/gitRepo/exec/execPackTmp.sh build_unstable rel_prod ami-90fd0286 unstable Ubuntu_14.04_Docker_1.11.sh false
    on_success:
      - script: echo "SUCCESS"
    on_failure:
      - script: cat /build/IN/bldami_repo/gitRepo/exec/output.txt

  ##########################
  # end build release amis
  ##########################
